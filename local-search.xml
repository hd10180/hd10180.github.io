<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>supervisor的简单使用</title>
    <link href="/2021/03/27/supervisor%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/"/>
    <url>/2021/03/27/supervisor%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<p>将项目代码部署到服务器之后运行起来，如果使用<code>python app.py</code>直接跑，当出现异常时，服务就会终止，因此需要让项目在遇到异常时可以尝试重启。<br>经过一番查找之后，发现有两种方案比较适合，一是使用linux自带的systemd<a href="https://segmentfault.com/a/1190000021761898">参见：Nginx+Gunicorn+Flask+Supervisor 部署 Python 服务的详细教程</a>，一种是使用supervisor<a href="https://wizardforcel.gitbooks.io/the-way-to-flask/content/chapter013.html">参见:使用 Gunicorn 和 Nginx 部署 Flask 项目</a><br>这里只讲supervisor的部分，因为我本地linux环境下上述两个帖子都跑不起来，或不满足我的需求。</p><h2 id="安装supervisor"><a href="#安装supervisor" class="headerlink" title="安装supervisor"></a>安装supervisor</h2><p><code>pip install supervisor</code></p><h2 id="初始化配置文件"><a href="#初始化配置文件" class="headerlink" title="初始化配置文件"></a>初始化配置文件</h2><p>执行<code>echo_supervisord_conf &gt; supervisord.conf</code><br>编辑上面产生的文件，后面有注释【修改】二字的是修改过的部分，别的是默认的<br>【注意】在<code>~</code>目录生成的配置文件，需要进行修改，然后<code>sudo mv supervisord.conf /etc</code>移动到<code>/etc</code></p><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br></pre></td><td class="code"><pre><code class="hljs vhdl">; Sample supervisor config <span class="hljs-keyword">file</span>.<br>;<br>; <span class="hljs-keyword">For</span> more information <span class="hljs-keyword">on</span> the config <span class="hljs-keyword">file</span>, please see:<br>; http://supervisord.org/<span class="hljs-keyword">configuration</span>.html<br>;<br>; Notes:<br>;  - Shell expansion (<span class="hljs-string">&quot;~&quot;</span> <span class="hljs-keyword">or</span> <span class="hljs-string">&quot;$HOME&quot;</span>) <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> supported.  Environment<br>;    variables can be expanded using this syntax: <span class="hljs-string">&quot;%(ENV_HOME)s&quot;</span>.<br>;  - Quotes around values are <span class="hljs-keyword">not</span> supported, except <span class="hljs-keyword">in</span> the <span class="hljs-keyword">case</span> <span class="hljs-keyword">of</span><br>;    the environment= options as shown below.<br>;  - Comments must have a leading space: <span class="hljs-string">&quot;a=b ;comment&quot;</span> <span class="hljs-keyword">not</span> <span class="hljs-string">&quot;a=b;comment&quot;</span>.<br>;  - Command will be truncated <span class="hljs-keyword">if</span> it looks like a config <span class="hljs-keyword">file</span> comment, e.g.<br>;    <span class="hljs-string">&quot;command=bash -c &#x27;foo ; bar&#x27;&quot;</span> will truncate <span class="hljs-keyword">to</span> <span class="hljs-string">&quot;command=bash -c &#x27;foo &quot;</span>.<br>;<br>; <span class="hljs-literal">Warning</span>:<br>;  Paths throughout this example <span class="hljs-keyword">file</span> <span class="hljs-keyword">use</span> /tmp because it <span class="hljs-keyword">is</span> available <span class="hljs-keyword">on</span> most<br>;  systems.  You will likely need <span class="hljs-keyword">to</span> change these <span class="hljs-keyword">to</span> locations more appropriate<br>;  <span class="hljs-keyword">for</span> your system.  Some systems periodically delete older files <span class="hljs-keyword">in</span> /tmp.<br>;  Notably, <span class="hljs-keyword">if</span> the socket <span class="hljs-keyword">file</span> defined <span class="hljs-keyword">in</span> the [unix_http_server] section below<br>;  <span class="hljs-keyword">is</span> deleted, supervisorctl will be unable <span class="hljs-keyword">to</span> connect <span class="hljs-keyword">to</span> supervisord.<br><br>[unix_http_server]<br>;<span class="hljs-keyword">file</span>=/tmp/supervisor.sock   ; the path <span class="hljs-keyword">to</span> the socket <span class="hljs-keyword">file</span><br><span class="hljs-keyword">file</span>=/var/run/supervisor.sock ;修改，爬楼说是为了防止缓存被清理，下同<br>;chmod=<span class="hljs-number">0700</span>                 ; socket <span class="hljs-keyword">file</span> mode (<span class="hljs-keyword">default</span> <span class="hljs-number">0700</span>)<br>;chown=nobody:nogroup       ; socket <span class="hljs-keyword">file</span> uid:gid owner<br>;username=user              ; <span class="hljs-keyword">default</span> <span class="hljs-keyword">is</span> no username (<span class="hljs-keyword">open</span> server)<br>;password=<span class="hljs-number">123</span>               ; <span class="hljs-keyword">default</span> <span class="hljs-keyword">is</span> no password (<span class="hljs-keyword">open</span> server)<br><br>; Security <span class="hljs-literal">Warning</span>:<br>;  The inet HTTP server <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> enabled by <span class="hljs-keyword">default</span>.  The inet HTTP server <span class="hljs-keyword">is</span><br>;  enabled by uncommenting the [inet_http_server] section below.  The inet<br>;  HTTP server <span class="hljs-keyword">is</span> intended <span class="hljs-keyword">for</span> <span class="hljs-keyword">use</span> within a trusted environment only.  It<br>;  should only be bound <span class="hljs-keyword">to</span> localhost <span class="hljs-keyword">or</span> only accessible from within an<br>;  isolated, trusted network.  The inet HTTP server does <span class="hljs-keyword">not</span> support any<br>;  form <span class="hljs-keyword">of</span> encryption.  The inet HTTP server does <span class="hljs-keyword">not</span> <span class="hljs-keyword">use</span> authentication<br>;  by <span class="hljs-keyword">default</span> (see the username= <span class="hljs-keyword">and</span> password= options <span class="hljs-keyword">to</span> add authentication).<br>;  Never expose the inet HTTP server <span class="hljs-keyword">to</span> the public internet.<br><br>;[inet_http_server]         ; inet (TCP) server disabled by <span class="hljs-keyword">default</span><br>;<span class="hljs-keyword">port</span>=<span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">9001</span>        ; ip_address:<span class="hljs-keyword">port</span> specifier, *:<span class="hljs-keyword">port</span> <span class="hljs-keyword">for</span> <span class="hljs-keyword">all</span> iface<br>;username=user              ; <span class="hljs-keyword">default</span> <span class="hljs-keyword">is</span> no username (<span class="hljs-keyword">open</span> server)<br>;password=<span class="hljs-number">123</span>               ; <span class="hljs-keyword">default</span> <span class="hljs-keyword">is</span> no password (<span class="hljs-keyword">open</span> server)<br><br>[supervisord]<br>;logfile=/tmp/supervisord.log ; main log <span class="hljs-keyword">file</span>; <span class="hljs-keyword">default</span> $CWD/supervisord.log<br>logfile=/var/log/supervisord.log  ;修改<br>logfile_maxbytes=<span class="hljs-number">50</span>MB        ; max main logfile bytes b4 rotation; <span class="hljs-keyword">default</span> <span class="hljs-number">50</span>MB<br>logfile_backups=<span class="hljs-number">10</span>           ; # <span class="hljs-keyword">of</span> main logfile backups; <span class="hljs-number">0</span> means none, <span class="hljs-keyword">default</span> <span class="hljs-number">10</span><br>loglevel=info                ; log level; <span class="hljs-keyword">default</span> info; <span class="hljs-keyword">others</span>: debug,warn,trace<br>;pidfile=/tmp/supervisord.pid ; supervisord pidfile; <span class="hljs-keyword">default</span> supervisord.pid<br>pidfile=/var/run/supervisord.pid ;修改<br>nodaemon=<span class="hljs-literal">false</span>               ; start <span class="hljs-keyword">in</span> foreground <span class="hljs-keyword">if</span> <span class="hljs-literal">true</span>; <span class="hljs-keyword">default</span> <span class="hljs-literal">false</span><br>silent=<span class="hljs-literal">false</span>                 ; no logs <span class="hljs-keyword">to</span> stdout <span class="hljs-keyword">if</span> <span class="hljs-literal">true</span>; <span class="hljs-keyword">default</span> <span class="hljs-literal">false</span><br>minfds=<span class="hljs-number">1024</span>                  ; min. avail startup <span class="hljs-keyword">file</span> descriptors; <span class="hljs-keyword">default</span> <span class="hljs-number">1024</span><br>minprocs=<span class="hljs-number">200</span>                 ; min. avail <span class="hljs-keyword">process</span> descriptors;<span class="hljs-keyword">default</span> <span class="hljs-number">200</span><br>;umask=<span class="hljs-number">022</span>                   ; <span class="hljs-keyword">process</span> <span class="hljs-keyword">file</span> creation umask; <span class="hljs-keyword">default</span> <span class="hljs-number">022</span><br>;user=supervisord            ; setuid <span class="hljs-keyword">to</span> this UNIX account at startup; recommended <span class="hljs-keyword">if</span> root<br>;identifier=supervisor       ; supervisord identifier, <span class="hljs-keyword">default</span> <span class="hljs-keyword">is</span> <span class="hljs-symbol">&#x27;supervisor</span>&#x27;<br>;directory=/tmp              ; <span class="hljs-keyword">default</span> <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">to</span> cd during start<br>;nocleanup=<span class="hljs-literal">true</span>              ; don<span class="hljs-symbol">&#x27;t</span> clean up tempfiles at start; <span class="hljs-keyword">default</span> <span class="hljs-literal">false</span><br>;childlogdir=/tmp            ; <span class="hljs-symbol">&#x27;AUTO</span>&#x27; child log dir, <span class="hljs-keyword">default</span> $TEMP<br>;environment=KEY=<span class="hljs-string">&quot;value&quot;</span>     ; key value pairs <span class="hljs-keyword">to</span> add <span class="hljs-keyword">to</span> environment<br>;strip_ansi=<span class="hljs-literal">false</span>            ; strip ansi escape codes <span class="hljs-keyword">in</span> logs; def. <span class="hljs-literal">false</span><br><br>; The rpcinterface:supervisor section must remain <span class="hljs-keyword">in</span> the config <span class="hljs-keyword">file</span> <span class="hljs-keyword">for</span><br>; RPC (supervisorctl/web interface) <span class="hljs-keyword">to</span> work.  Additional interfaces may be<br>; added by defining them <span class="hljs-keyword">in</span> separate [rpcinterface:x] sections.<br><br>[rpcinterface:supervisor]<br>supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface<br><br>; The supervisorctl section configures how supervisorctl will connect <span class="hljs-keyword">to</span><br>; supervisord.  configure it match the settings <span class="hljs-keyword">in</span> either the unix_http_server<br>; <span class="hljs-keyword">or</span> inet_http_server section.<br><br>[supervisorctl]<br>;serverurl=unix:///tmp/supervisor.sock ; <span class="hljs-keyword">use</span> a unix:// URL  <span class="hljs-keyword">for</span> a unix socket<br>serverurl=unix:///var/run/supervisor.sock ;修改<br>;serverurl=http://<span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>:<span class="hljs-number">9001</span> ; <span class="hljs-keyword">use</span> an http:// url <span class="hljs-keyword">to</span> specify an inet socket<br>;username=chris              ; should be same as <span class="hljs-keyword">in</span> [*_http_server] <span class="hljs-keyword">if</span> set<br>;password=<span class="hljs-number">123</span>                ; should be same as <span class="hljs-keyword">in</span> [*_http_server] <span class="hljs-keyword">if</span> set<br>;prompt=mysupervisor         ; cmd <span class="hljs-literal">line</span> prompt (<span class="hljs-keyword">default</span> <span class="hljs-string">&quot;supervisor&quot;</span>)<br>;history_file=~/.sc_history  ; <span class="hljs-keyword">use</span> readline history <span class="hljs-keyword">if</span> available<br><br>; The sample program section below shows <span class="hljs-keyword">all</span> possible program subsection values.<br>; Create one <span class="hljs-keyword">or</span> more <span class="hljs-symbol">&#x27;real</span>&#x27; program: sections <span class="hljs-keyword">to</span> be able <span class="hljs-keyword">to</span> control them under<br>; supervisor.<br><br>;[program:theprogramname]<br>;command=/bin/cat              ; the program (relative uses PATH, can take args)<br>;process_name=%(program_name)s ; process_name expr (<span class="hljs-keyword">default</span> %(program_name)s)<br>;numprocs=<span class="hljs-number">1</span>                    ; number <span class="hljs-keyword">of</span> processes copies <span class="hljs-keyword">to</span> start (def <span class="hljs-number">1</span>)<br>;directory=/tmp                ; directory <span class="hljs-keyword">to</span> cwd <span class="hljs-keyword">to</span> before exec (def no cwd)<br>;umask=<span class="hljs-number">022</span>                     ; umask <span class="hljs-keyword">for</span> <span class="hljs-keyword">process</span> (<span class="hljs-keyword">default</span> None)<br>;priority=<span class="hljs-number">999</span>                  ; the relative start priority (<span class="hljs-keyword">default</span> <span class="hljs-number">999</span>)<br>;autostart=<span class="hljs-literal">true</span>                ; start at supervisord start (<span class="hljs-keyword">default</span>: <span class="hljs-literal">true</span>)<br>;startsecs=<span class="hljs-number">1</span>                   ; # <span class="hljs-keyword">of</span> secs prog must stay up <span class="hljs-keyword">to</span> be running (def. <span class="hljs-number">1</span>)<br>;startretries=<span class="hljs-number">3</span>                ; max # <span class="hljs-keyword">of</span> serial start failures <span class="hljs-keyword">when</span> starting (<span class="hljs-keyword">default</span> <span class="hljs-number">3</span>)<br>;autorestart=unexpected        ; <span class="hljs-keyword">when</span> <span class="hljs-keyword">to</span> restart <span class="hljs-keyword">if</span> exited <span class="hljs-keyword">after</span> running (def: unexpected)<br>;exitcodes=<span class="hljs-number">0</span>                   ; <span class="hljs-symbol">&#x27;expected</span>&#x27; <span class="hljs-keyword">exit</span> codes used <span class="hljs-keyword">with</span> autorestart (<span class="hljs-keyword">default</span> <span class="hljs-number">0</span>)<br>;stopsignal=QUIT               ; <span class="hljs-keyword">signal</span> used <span class="hljs-keyword">to</span> kill <span class="hljs-keyword">process</span> (<span class="hljs-keyword">default</span> TERM)<br>;stopwaitsecs=<span class="hljs-number">10</span>               ; max num secs <span class="hljs-keyword">to</span> <span class="hljs-keyword">wait</span> b4 SIGKILL (<span class="hljs-keyword">default</span> <span class="hljs-number">10</span>)<br>;stopasgroup=<span class="hljs-literal">false</span>             ; send stop <span class="hljs-keyword">signal</span> <span class="hljs-keyword">to</span> the UNIX <span class="hljs-keyword">process</span> <span class="hljs-keyword">group</span> (<span class="hljs-keyword">default</span> <span class="hljs-literal">false</span>)<br>;killasgroup=<span class="hljs-literal">false</span>             ; SIGKILL the UNIX <span class="hljs-keyword">process</span> <span class="hljs-keyword">group</span> (def <span class="hljs-literal">false</span>)<br>;user=chrism                   ; setuid <span class="hljs-keyword">to</span> this UNIX account <span class="hljs-keyword">to</span> run the program<br>;redirect_stderr=<span class="hljs-literal">true</span>          ; redirect proc stderr <span class="hljs-keyword">to</span> stdout (<span class="hljs-keyword">default</span> <span class="hljs-literal">false</span>)<br>;stdout_logfile=/a/path        ; stdout log path, NONE <span class="hljs-keyword">for</span> none; <span class="hljs-keyword">default</span> AUTO<br>;stdout_logfile_maxbytes=<span class="hljs-number">1</span>MB   ; max # logfile bytes b4 rotation (<span class="hljs-keyword">default</span> <span class="hljs-number">50</span>MB)<br>;stdout_logfile_backups=<span class="hljs-number">10</span>     ; # <span class="hljs-keyword">of</span> stdout logfile backups (<span class="hljs-number">0</span> means none, <span class="hljs-keyword">default</span> <span class="hljs-number">10</span>)<br>;stdout_capture_maxbytes=<span class="hljs-number">1</span>MB   ; number <span class="hljs-keyword">of</span> bytes <span class="hljs-keyword">in</span> <span class="hljs-symbol">&#x27;capturemode</span>&#x27; (<span class="hljs-keyword">default</span> <span class="hljs-number">0</span>)<br>;stdout_events_enabled=<span class="hljs-literal">false</span>   ; emit events <span class="hljs-keyword">on</span> stdout writes (<span class="hljs-keyword">default</span> <span class="hljs-literal">false</span>)<br>;stdout_syslog=<span class="hljs-literal">false</span>           ; send stdout <span class="hljs-keyword">to</span> syslog <span class="hljs-keyword">with</span> <span class="hljs-keyword">process</span> name (<span class="hljs-keyword">default</span> <span class="hljs-literal">false</span>)<br>;stderr_logfile=/a/path        ; stderr log path, NONE <span class="hljs-keyword">for</span> none; <span class="hljs-keyword">default</span> AUTO<br>;stderr_logfile_maxbytes=<span class="hljs-number">1</span>MB   ; max # logfile bytes b4 rotation (<span class="hljs-keyword">default</span> <span class="hljs-number">50</span>MB)<br>;stderr_logfile_backups=<span class="hljs-number">10</span>     ; # <span class="hljs-keyword">of</span> stderr logfile backups (<span class="hljs-number">0</span> means none, <span class="hljs-keyword">default</span> <span class="hljs-number">10</span>)<br>;stderr_capture_maxbytes=<span class="hljs-number">1</span>MB   ; number <span class="hljs-keyword">of</span> bytes <span class="hljs-keyword">in</span> <span class="hljs-symbol">&#x27;capturemode</span>&#x27; (<span class="hljs-keyword">default</span> <span class="hljs-number">0</span>)<br>;stderr_events_enabled=<span class="hljs-literal">false</span>   ; emit events <span class="hljs-keyword">on</span> stderr writes (<span class="hljs-keyword">default</span> <span class="hljs-literal">false</span>)<br>;stderr_syslog=<span class="hljs-literal">false</span>           ; send stderr <span class="hljs-keyword">to</span> syslog <span class="hljs-keyword">with</span> <span class="hljs-keyword">process</span> name (<span class="hljs-keyword">default</span> <span class="hljs-literal">false</span>)<br>;environment=A=<span class="hljs-string">&quot;1&quot;</span>,B=<span class="hljs-string">&quot;2&quot;</span>       ; <span class="hljs-keyword">process</span> environment additions (def no adds)<br>;serverurl=AUTO                ; override serverurl computation (childutils)<br><br>; The sample eventlistener section below shows <span class="hljs-keyword">all</span> possible eventlistener<br>; subsection values.  Create one <span class="hljs-keyword">or</span> more <span class="hljs-symbol">&#x27;real</span>&#x27; eventlistener: sections <span class="hljs-keyword">to</span> be<br>; able <span class="hljs-keyword">to</span> handle event notifications sent by supervisord.<br><br>;[eventlistener:theeventlistenername]<br>;command=/bin/eventlistener    ; the program (relative uses PATH, can take args)<br>;process_name=%(program_name)s ; process_name expr (<span class="hljs-keyword">default</span> %(program_name)s)<br>;numprocs=<span class="hljs-number">1</span>                    ; number <span class="hljs-keyword">of</span> processes copies <span class="hljs-keyword">to</span> start (def <span class="hljs-number">1</span>)<br>;events=EVENT                  ; event notif. types <span class="hljs-keyword">to</span> subscribe <span class="hljs-keyword">to</span> (req<span class="hljs-symbol">&#x27;d</span>)<br>;buffer_size=<span class="hljs-number">10</span>                ; event <span class="hljs-keyword">buffer</span> queue size (<span class="hljs-keyword">default</span> <span class="hljs-number">10</span>)<br>;directory=/tmp                ; directory <span class="hljs-keyword">to</span> cwd <span class="hljs-keyword">to</span> before exec (def no cwd)<br>;umask=<span class="hljs-number">022</span>                     ; umask <span class="hljs-keyword">for</span> <span class="hljs-keyword">process</span> (<span class="hljs-keyword">default</span> None)<br>;priority=-<span class="hljs-number">1</span>                   ; the relative start priority (<span class="hljs-keyword">default</span> -<span class="hljs-number">1</span>)<br>;autostart=<span class="hljs-literal">true</span>                ; start at supervisord start (<span class="hljs-keyword">default</span>: <span class="hljs-literal">true</span>)<br>;startsecs=<span class="hljs-number">1</span>                   ; # <span class="hljs-keyword">of</span> secs prog must stay up <span class="hljs-keyword">to</span> be running (def. <span class="hljs-number">1</span>)<br>;startretries=<span class="hljs-number">3</span>                ; max # <span class="hljs-keyword">of</span> serial start failures <span class="hljs-keyword">when</span> starting (<span class="hljs-keyword">default</span> <span class="hljs-number">3</span>)<br>;autorestart=unexpected        ; autorestart <span class="hljs-keyword">if</span> exited <span class="hljs-keyword">after</span> running (def: unexpected)<br>;exitcodes=<span class="hljs-number">0</span>                   ; <span class="hljs-symbol">&#x27;expected</span>&#x27; <span class="hljs-keyword">exit</span> codes used <span class="hljs-keyword">with</span> autorestart (<span class="hljs-keyword">default</span> <span class="hljs-number">0</span>)<br>;stopsignal=QUIT               ; <span class="hljs-keyword">signal</span> used <span class="hljs-keyword">to</span> kill <span class="hljs-keyword">process</span> (<span class="hljs-keyword">default</span> TERM)<br>;stopwaitsecs=<span class="hljs-number">10</span>               ; max num secs <span class="hljs-keyword">to</span> <span class="hljs-keyword">wait</span> b4 SIGKILL (<span class="hljs-keyword">default</span> <span class="hljs-number">10</span>)<br>;stopasgroup=<span class="hljs-literal">false</span>             ; send stop <span class="hljs-keyword">signal</span> <span class="hljs-keyword">to</span> the UNIX <span class="hljs-keyword">process</span> <span class="hljs-keyword">group</span> (<span class="hljs-keyword">default</span> <span class="hljs-literal">false</span>)<br>;killasgroup=<span class="hljs-literal">false</span>             ; SIGKILL the UNIX <span class="hljs-keyword">process</span> <span class="hljs-keyword">group</span> (def <span class="hljs-literal">false</span>)<br>;user=chrism                   ; setuid <span class="hljs-keyword">to</span> this UNIX account <span class="hljs-keyword">to</span> run the program<br>;redirect_stderr=<span class="hljs-literal">false</span>         ; redirect_stderr=<span class="hljs-literal">true</span> <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> allowed <span class="hljs-keyword">for</span> eventlisteners<br>;stdout_logfile=/a/path        ; stdout log path, NONE <span class="hljs-keyword">for</span> none; <span class="hljs-keyword">default</span> AUTO<br>;stdout_logfile_maxbytes=<span class="hljs-number">1</span>MB   ; max # logfile bytes b4 rotation (<span class="hljs-keyword">default</span> <span class="hljs-number">50</span>MB)<br>;stdout_logfile_backups=<span class="hljs-number">10</span>     ; # <span class="hljs-keyword">of</span> stdout logfile backups (<span class="hljs-number">0</span> means none, <span class="hljs-keyword">default</span> <span class="hljs-number">10</span>)<br>;stdout_events_enabled=<span class="hljs-literal">false</span>   ; emit events <span class="hljs-keyword">on</span> stdout writes (<span class="hljs-keyword">default</span> <span class="hljs-literal">false</span>)<br>;stdout_syslog=<span class="hljs-literal">false</span>           ; send stdout <span class="hljs-keyword">to</span> syslog <span class="hljs-keyword">with</span> <span class="hljs-keyword">process</span> name (<span class="hljs-keyword">default</span> <span class="hljs-literal">false</span>)<br>;stderr_logfile=/a/path        ; stderr log path, NONE <span class="hljs-keyword">for</span> none; <span class="hljs-keyword">default</span> AUTO<br>;stderr_logfile_maxbytes=<span class="hljs-number">1</span>MB   ; max # logfile bytes b4 rotation (<span class="hljs-keyword">default</span> <span class="hljs-number">50</span>MB)<br>;stderr_logfile_backups=<span class="hljs-number">10</span>     ; # <span class="hljs-keyword">of</span> stderr logfile backups (<span class="hljs-number">0</span> means none, <span class="hljs-keyword">default</span> <span class="hljs-number">10</span>)<br>;stderr_events_enabled=<span class="hljs-literal">false</span>   ; emit events <span class="hljs-keyword">on</span> stderr writes (<span class="hljs-keyword">default</span> <span class="hljs-literal">false</span>)<br>;stderr_syslog=<span class="hljs-literal">false</span>           ; send stderr <span class="hljs-keyword">to</span> syslog <span class="hljs-keyword">with</span> <span class="hljs-keyword">process</span> name (<span class="hljs-keyword">default</span> <span class="hljs-literal">false</span>)<br>;environment=A=<span class="hljs-string">&quot;1&quot;</span>,B=<span class="hljs-string">&quot;2&quot;</span>       ; <span class="hljs-keyword">process</span> environment additions<br>;serverurl=AUTO                ; override serverurl computation (childutils)<br><br>; The sample <span class="hljs-keyword">group</span> section below shows <span class="hljs-keyword">all</span> possible <span class="hljs-keyword">group</span> values.  Create one<br>; <span class="hljs-keyword">or</span> more <span class="hljs-symbol">&#x27;real</span>&#x27; <span class="hljs-keyword">group</span>: sections <span class="hljs-keyword">to</span> create <span class="hljs-string">&quot;heterogeneous&quot;</span> <span class="hljs-keyword">process</span> groups.<br><br>;[<span class="hljs-keyword">group</span>:thegroupname]<br>;programs=progname1,progname2  ; each refers <span class="hljs-keyword">to</span> <span class="hljs-string">&#x27;x&#x27;</span> <span class="hljs-keyword">in</span> [program:x] definitions<br>;priority=<span class="hljs-number">999</span>                  ; the relative start priority (<span class="hljs-keyword">default</span> <span class="hljs-number">999</span>)<br><br>; The [include] section can just contain the <span class="hljs-string">&quot;files&quot;</span> setting.  This<br>; setting can list multiple files (separated by whitespace <span class="hljs-keyword">or</span><br>; newlines).  It can also contain wildcards.  The filenames are<br>; interpreted as relative <span class="hljs-keyword">to</span> this <span class="hljs-keyword">file</span>.  Included files *cannot*<br>; include files themselves.<br><br>[include]<br>;files = relative/directory<span class="hljs-comment">/*.ini</span><br><span class="hljs-comment">files = /etc/supervisor.d/*.ini ;修改；这里是为了指定supervisor子进程的配置文件目录，与下面创建的/etc/supervisor.d对应</span><br></code></pre></td></tr></table></figure><h2 id="配置你要运行的项目进程配置文件"><a href="#配置你要运行的项目进程配置文件" class="headerlink" title="配置你要运行的项目进程配置文件"></a>配置你要运行的项目进程配置文件</h2><p>比如我需要运行的项目名称叫dev-flask，那么我的进程配置应该是这样的<br>创建并修改后，需要移动到<code>/etc/supervisor.d/</code>，也就是如果没有<code>supervisor.d</code>这个文件夹，需要手动创建该文件夹<code>sudo mkdir /etc/supervisor.d</code></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-section">[program:dev-flask]</span>  <span class="hljs-comment">;项目名，自定义的，用于supervisor查看和管理该进程</span><br><span class="hljs-attr">directory</span> = /home/zeara/projects/my_flask_app       <span class="hljs-comment">; 程序的启动目录，就是你要跑的项目目录  </span><br><span class="hljs-comment">; 下面这句是启动命令，在控制台怎么执行，那么在这里就怎么写，我用的是miniconda环境，使用gunicorn指定4个workers，并以gevent的方式运行</span><br><span class="hljs-attr">command</span> = /home/zeara/miniconda3/envs/m3.<span class="hljs-number">9</span>/bin/gunicorn -w <span class="hljs-number">4</span> --worker-class gevent --bind <span class="hljs-number">0.0</span>.<span class="hljs-number">0.0</span>:<span class="hljs-number">5000</span> app:app  <span class="hljs-comment">; 启动命令</span><br><br><span class="hljs-attr">numprocs</span>=<span class="hljs-number">1</span>           <span class="hljs-comment">; number of processes copies to start (def 1)   </span><br><span class="hljs-attr">autostart</span> = <span class="hljs-literal">true</span>     <span class="hljs-comment">; 在 supervisord 启动的时候也自动启动   </span><br><span class="hljs-attr">startsecs</span> = <span class="hljs-number">1</span>        <span class="hljs-comment">; 启动 1 秒后没有异常退出，就当作已经正常启动了   </span><br><span class="hljs-attr">autorestart</span> = <span class="hljs-literal">true</span>   <span class="hljs-comment">; 程序异常退出后自动重启   </span><br><span class="hljs-attr">startretries</span> = <span class="hljs-number">3</span>     <span class="hljs-comment">; 启动失败自动重试次数，默认是 3   </span><br><span class="hljs-attr">user</span> = zeara          <span class="hljs-comment">; 用哪个用户启动，我的用户名就叫zeara</span><br><span class="hljs-attr">redirect_stderr</span> = <span class="hljs-literal">true</span>          <span class="hljs-comment">; 把 stderr 重定向到 stdout，默认 false   </span><br><span class="hljs-attr">stdout_logfile_maxbytes</span> = <span class="hljs-number">20</span>MB  <span class="hljs-comment">; stdout 日志文件大小，默认 50MB   </span><br><span class="hljs-attr">stdout_logfile_backups</span> = <span class="hljs-number">10</span>     <span class="hljs-comment">; stdout 日志文件备份数 </span><br><span class="hljs-attr">stdout_logfile</span>=/var/log/dev-flask.log       <span class="hljs-comment">; log 日志存放目录，如果启动失败了可以查看日志</span><br><span class="hljs-attr">stderr_logfile</span>=/var/log/dev-flask.error     <span class="hljs-comment">; 错误日志存放目录，如果启动失败了可以查看日志</span><br></code></pre></td></tr></table></figure><h2 id="尝试运行"><a href="#尝试运行" class="headerlink" title="尝试运行"></a>尝试运行</h2><p>直接使用<code>supervisord</code>就可以运行，不必指定配置文件</p><h2 id="查看进程状态-坑"><a href="#查看进程状态-坑" class="headerlink" title="查看进程状态(坑)"></a>查看进程状态(坑)</h2><p>使用<code>supervisorctl</code>可以看到所有在运行的进程<br>如果输入后回车没有任何反应，说明上面的子进程<code>dev-flask</code>没有运行起来，需要检查配置文件<code>/etc/supervisord.conf</code>，看下最后一行的<code>files = /etc/supervisor.d/*.ini</code>是否与子进程配置文件所在目录一致<br>如果能看到<code>dev-flask</code>说明子进程配置文件配置正常，没运行起来就去查询<code>dev-flask.ini</code>配置的日志路径找日志</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>manjaro 无法连接互联网 无法访问互联网</title>
    <link href="/2021/03/22/manjaro-%E6%97%A0%E6%B3%95%E8%BF%9E%E6%8E%A5%E4%BA%92%E8%81%94%E7%BD%91-%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE%E4%BA%92%E8%81%94%E7%BD%91/"/>
    <url>/2021/03/22/manjaro-%E6%97%A0%E6%B3%95%E8%BF%9E%E6%8E%A5%E4%BA%92%E8%81%94%E7%BD%91-%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE%E4%BA%92%E8%81%94%E7%BD%91/</url>
    
    <content type="html"><![CDATA[<p>在试图使用PPPoE拨号访问有线网络失败，按照网上的一些操作处理之后依旧无法访问互联网<br>并且此时使用wifi连接网络，能连上wifi但是无法访问互联网的情况<br>可以使用<code>sudo dhcpcd</code>重新分配ip，然后就可以愉快地上网啦</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>manjaro mysql 安装与卸载</title>
    <link href="/2021/03/18/manjaro-mysql-%E5%AE%89%E8%A3%85%E4%B8%8E%E5%8D%B8%E8%BD%BD/"/>
    <url>/2021/03/18/manjaro-mysql-%E5%AE%89%E8%A3%85%E4%B8%8E%E5%8D%B8%E8%BD%BD/</url>
    
    <content type="html"><![CDATA[<p>如何在manjaro kde中安装mysql？</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="安装、初始化命令"><a href="#安装、初始化命令" class="headerlink" title="安装、初始化命令"></a>安装、初始化命令</h3><ul><li><code>sudo pacman -S mysql</code></li><li>选择mariadb这个包</li><li><code>sudo mysql_install_db --user=mysql --basedir=/usr --datadir=/var/lib/mysql</code></li><li><code>systemctl start mariadb</code></li><li><code>systemctl enable mariadb</code></li><li><code>sudo mysql_secure_installation</code>进行密码设置以及部分自定义初始化<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3></li><li><code>mysql -u root -p</code></li><li>输入密码</li></ul><h2 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h2><ul><li><code>systemctl stop mariadb</code></li><li><code>sudo pacman -Rns mariadb</code></li><li><code>sudo su</code></li><li><code>rm -rf /var/lib/mysql/*</code></li><li>检查<code>/etc/</code>、<code>~/</code>、<code>/etc/mysql/</code>下是否有my.cnf配置文件，有则进行删除</li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>记录一次使用ssh远程登录阿里云主机遇到的问题</title>
    <link href="/2021/03/08/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1%E4%BD%BF%E7%94%A8ssh%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95%E9%98%BF%E9%87%8C%E4%BA%91%E4%B8%BB%E6%9C%BA%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <url>/2021/03/08/%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1%E4%BD%BF%E7%94%A8ssh%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95%E9%98%BF%E9%87%8C%E4%BA%91%E4%B8%BB%E6%9C%BA%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p>问题记录：<br>ssh、远程登录、云主机</p><p>昨天朋友的阿里云主机使用ssh登录后，控制台输入命令会出现显示异常的问题，如退格键(Backspace)，方向键(↑↓←→)，情况与<a href="https://askubuntu.com/questions/163802/backspace-tab-del-and-arrow-keys-not-working-in-terminal-using-ssh%E7%9A%84%E4%B8%80%E8%87%B4%EF%BC%8C%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%E5%BE%88%E7%AE%80%E5%8D%95%EF%BC%8C%E8%BE%93%E5%85%A5%60sudo">https://askubuntu.com/questions/163802/backspace-tab-del-and-arrow-keys-not-working-in-terminal-using-ssh的一致，解决方法很简单，输入`sudo</a> chsh -s /bin/bash`即可解决</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>修改wine微信等应用dpi，调整缩放</title>
    <link href="/2021/03/08/%E4%BF%AE%E6%94%B9wine%E5%BE%AE%E4%BF%A1%E7%AD%89%E5%BA%94%E7%94%A8dpi%EF%BC%8C%E8%B0%83%E6%95%B4%E7%BC%A9%E6%94%BE/"/>
    <url>/2021/03/08/%E4%BF%AE%E6%94%B9wine%E5%BE%AE%E4%BF%A1%E7%AD%89%E5%BA%94%E7%94%A8dpi%EF%BC%8C%E8%B0%83%E6%95%B4%E7%BC%A9%E6%94%BE/</url>
    
    <content type="html"><![CDATA[<p>manjaro kde折腾记录四：调整wine微信等应用缩放</p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>我这边安装的是<code>com.qq.weixin.spark</code>和<code>com.qq.tim.spark</code><br>安装完成后界面显示很小，在我的显示器上显得特别的小，输入框的乱码方框问题在前面的折腾中已经解决，但无法直视当前特别小的应用界面</p><h2 id="寻求答案"><a href="#寻求答案" class="headerlink" title="寻求答案"></a>寻求答案</h2><p>参考<a href="https://aur.archlinux.org/packages/com.qq.weixin.spark//">aur下的评论</a></p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>控制台输入<code>WINEPREFIX=~/.deepinwine/Spark-WeChat deepin-wine5 winecfg</code>回车，其中<code>~/.deepinwine/Spark-WeChat</code>这部分参考各自系统目录，在弹出的界面中点击【显示】在【屏幕分辨率】中进行dpi设置，我的4k显示器中设置为144dpi就很自然，显示不会很小，字体很清晰不模糊</p><h2 id="题外话"><a href="#题外话" class="headerlink" title="题外话"></a>题外话</h2><p>wine的TIM可以控制台输入<code>WINEPREFIX=~/.deepinwine/Spark-TIM deepin-wine5 winecfg</code>做同样的调整，但是注意调整TIM的时候，在wine设置中，【应用程序】的【Windows版本】现在只能选Windows XP，否则TIM会打不开，原因未知</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>解决manjaro kde中wine微信等应用输入中文显示方框的问题</title>
    <link href="/2021/03/06/%E8%A7%A3%E5%86%B3manjaro-kde%E4%B8%ADdeepin%E5%BE%AE%E4%BF%A1%E7%AD%89%E5%BA%94%E7%94%A8%E8%BE%93%E5%85%A5%E4%B8%AD%E6%96%87%E6%98%BE%E7%A4%BA%E6%96%B9%E6%A1%86%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <url>/2021/03/06/%E8%A7%A3%E5%86%B3manjaro-kde%E4%B8%ADdeepin%E5%BE%AE%E4%BF%A1%E7%AD%89%E5%BA%94%E7%94%A8%E8%BE%93%E5%85%A5%E4%B8%AD%E6%96%87%E6%98%BE%E7%A4%BA%E6%96%B9%E6%A1%86%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p>manjaro kde折腾记录三：wine微信等应用输入中文显示方框的问题</p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p><code>manjaro kde</code>wine微信、tim等应用输入中文时，显示的为方框的问题</p><h2 id="寻求答案"><a href="#寻求答案" class="headerlink" title="寻求答案"></a>寻求答案</h2><p>参考<a href="https://blog.justforlxz.com/2020/09/17/deepin-wine-chinese-problem/">这个post</a>、<a href="https://github.com/wszqkzqk/deepin-wine-ubuntu/issues/136">这个issue</a></p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><h3 id="过程1"><a href="#过程1" class="headerlink" title="过程1"></a>过程1</h3><p>网上的教程有几种说法，大部分都是说需要将run.sh中的WINE_CMD设置为<code>LC_ALL=zh_CN.UTF-8 deepin-wine</code>其中比较易于理解的原理可以为这位老哥的<a href="https://github.com/wszqkzqk/deepin-wine-ubuntu/issues/136#issuecomment-617610682">描述</a>，根据具体情况修改对应的.sh文件，但是我实操的情况是，查看运行脚本后修改了对应的文件依然无法生效</p><h3 id="过程2"><a href="#过程2" class="headerlink" title="过程2"></a>过程2</h3><p>在过程1的基础上，根据上面这个issue提及到的，下载微软雅黑字体<a href="https://www.fonts.net.cn/font-30931224951.html">传送门</a>，安装微软雅黑字体(系统)，然后重启系统，到系统设置-&gt;外观-&gt;字体-&gt;调整所有字体-&gt;选择微软雅黑，然后启动微信，输入中文正常，遂重启系统后再打开微信依然保持正常。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>解决manjaro kde控制台无法切换中文输入法问题</title>
    <link href="/2021/03/05/%E8%A7%A3%E5%86%B3manjaro-kde%E6%8E%A7%E5%88%B6%E5%8F%B0%E6%97%A0%E6%B3%95%E5%88%87%E6%8D%A2%E4%B8%AD%E6%96%87%E8%BE%93%E5%85%A5%E9%97%AE%E9%A2%98/"/>
    <url>/2021/03/05/%E8%A7%A3%E5%86%B3manjaro-kde%E6%8E%A7%E5%88%B6%E5%8F%B0%E6%97%A0%E6%B3%95%E5%88%87%E6%8D%A2%E4%B8%AD%E6%96%87%E8%BE%93%E5%85%A5%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p>manjaro kde折腾记录一：控制台无法切换中文输入法</p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p><code>manjaro kde</code>控制台或系统应用搜索栏等位置无法切换中文输入法</p><h2 id="寻求答案"><a href="#寻求答案" class="headerlink" title="寻求答案"></a>寻求答案</h2><p>参考<a href="https://iminto.github.io/post/kde%E6%A1%8C%E9%9D%A2%E4%B8%8B%E9%83%A8%E5%88%86%E5%BA%94%E7%94%A8%E6%97%A0%E6%B3%95%E8%BE%93%E5%85%A5%E4%B8%AD%E6%96%87/">这个post</a>、<a href="https://bbs.archlinuxcn.org/viewtopic.php?id=10048">这个帖子</a>和<a href="https://archived.forum.manjaro.org/t/topic/152091">这个帖子</a></p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>确保正确安装了fcitx，这个文章很多，我的情况是<code>～/.xprofile</code>文件的配置文件写错了<br>网上的教程有几种说法，有的说是<code>～/.xprofile</code>，或者对应的shell配置文件（如<code>～/.bashrc</code>或<code>～/.zshrc</code>）需要增加以下内容</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-builtin-name">export</span> <span class="hljs-attribute">XIM_PROGRAM</span>=fcitx<br><span class="hljs-builtin-name">export</span> <span class="hljs-attribute">XIM</span>=fcitx<br><span class="hljs-builtin-name">export</span> <span class="hljs-attribute">GTK_IM_MODULE</span>=fcitx<br><span class="hljs-builtin-name">export</span> <span class="hljs-attribute">QT_IM_MODULE</span>=fcitx<br><span class="hljs-builtin-name">export</span> <span class="hljs-attribute">XMODIFIERS</span>=<span class="hljs-string">&quot;@im=fcitx&quot;</span><br></code></pre></td></tr></table></figure><h2 id="题外话"><a href="#题外话" class="headerlink" title="题外话"></a>题外话</h2><p>如果安装好了fcitx也加了配置还是出现问题，可以使用<code>fcitx-diagnose</code>命令查看下是否有错误提示</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>解决manjaro kde修改主题等无法打开系统设置问题</title>
    <link href="/2021/03/05/%E8%A7%A3%E5%86%B3manjaro-kde%E4%BF%AE%E6%94%B9%E4%B8%BB%E9%A2%98%E7%AD%89%E6%97%A0%E6%B3%95%E6%89%93%E5%BC%80%E7%B3%BB%E7%BB%9F%E8%AE%BE%E7%BD%AE%E9%97%AE%E9%A2%98/"/>
    <url>/2021/03/05/%E8%A7%A3%E5%86%B3manjaro-kde%E4%BF%AE%E6%94%B9%E4%B8%BB%E9%A2%98%E7%AD%89%E6%97%A0%E6%B3%95%E6%89%93%E5%BC%80%E7%B3%BB%E7%BB%9F%E8%AE%BE%E7%BD%AE%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p>manjaro kde折腾记录一：修改主题等无法打开系统设置</p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p><code>manjaro kde</code>在切换主题或者进行主题混搭后（我是试图使用mac主题混搭），可能会出现系统设置无法打开的情况，点击系统设置后，鼠标转圈完成并不会出现系统设置</p><h2 id="寻求答案"><a href="#寻求答案" class="headerlink" title="寻求答案"></a>寻求答案</h2><p>参考<a href="https://forum.manjaro.org/t/the-system-settings-doesnt-open/21787/11">这个帖子</a></p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>在konsole中输入<code>systemsettings5 --style=Breeze</code>，然后将重新设置一个主题，搞定</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/03/05/hello-world/"/>
    <url>/2021/03/05/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
